{"version":3,"sources":["utils.js","context.js","components/Cell.jsx","components/MinesBoard.jsx","components/Minesweeper.jsx","App.js","reportWebVitals.js","index.js"],"names":["generateGrid","gridSize","mines","grid","i","row","j","push","isMine","placeMine","generateRandomLocation","x","y","isSafeToPlaceMine","countAdjacentMines","filter","val","length","minesboard","Math","floor","random","expandMinesBoardUtil","px","py","value","adjacentMines","shown","clearField","size","map","rid","cell","cid","Array","from","expandMinesBoard","markField","isMarked","context","createContext","initialState","reducer","state","action","type","isGameOver","started","ContextProvider","children","useReducer","dispatch","actions","incrementSize","decrementSize","initializeMinesField","useCallback","alert","Provider","useStyles","makeStyles","height","width","border","backgroundColor","console","log","Cell","useContext","classes","className","onClick","onContextMenu","e","preventDefault","margin","gridArea","display","gridTemplateColumns","MinesBoard","minesweeper","gap","textAlign","gridTemplateAreas","header","options","time","justifyItem","restart","total","available","Minesweeper","useEffect","Typography","variant","ButtonGroup","fullWidth","color","Button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7a745b9.chunk.js","sourcesContent":["\nexport const generateGrid = (gridSize, mines) => {\n    const grid = []\n    for (let i = 0; i < gridSize; i++) {\n        let row = []\n        for (let j = 0; j < gridSize; j++) {\n            row.push({\n                isMine: false,\n                // shown: false,\n                // marked: false\n            })\n        }\n        grid.push(row)\n    }\n    \n    for (let i = 0; i < mines; i++) {\n        placeMine(grid, gridSize);\n    }\n    return grid;\n}\n\nconst placeMine = (grid, gridSize) => {\n    let [x, y] = generateRandomLocation(gridSize)\n\n    while(!isSafeToPlaceMine(grid, gridSize, x, y)) {\n        [x, y] = generateRandomLocation(gridSize)\n    }\n    grid[x][y].isMine = true\n        \n}\n\n\n\nconst isSafeToPlaceMine = (grid, gridSize, x, y) => {\n    if(isMine(grid, gridSize, x, y)) {\n        return false\n    }\n    return countAdjacentMines(grid, gridSize, x, y) !== 8;\n}\n\n\nexport const countAdjacentMines = (grid, gridSize, x, y) => {\n    return [\n        isMine(grid, gridSize, x + 1, y),\n        isMine(grid, gridSize, x - 1, y),\n        isMine(grid, gridSize, x, y + 1),\n        isMine(grid, gridSize, x, y - 1),\n        isMine(grid, gridSize, x - 1, y - 1),\n        isMine(grid, gridSize, x - 1, y + 1),\n        isMine(grid, gridSize, x + 1, y - 1),\n        isMine(grid, gridSize, x + 1, y  + 1)\n    ].filter(val => val).length\n}\n\nexport const isMine = (minesboard, gridSize, x, y) => {\n    if(x < 0 || x >= gridSize || y < 0 || y >= gridSize) {\n        return false;\n    }\n\n    return minesboard[x][y].isMine\n}\n\nconst generateRandomLocation = gridSize => [\n    Math.floor(Math.random() * gridSize), Math.floor(Math.random() * gridSize)]\n\n\nexport const expandMinesBoard = (minesboard, gridSize, x, y) => {\n    minesboard[x][y].value = 0\n    minesboard[x][y].shown = true\n    \n    expandMinesBoardUtil(minesboard, gridSize, x + 1, y, x, y)\n    expandMinesBoardUtil(minesboard, gridSize, x + 1, y - 1, x, y)\n    expandMinesBoardUtil(minesboard, gridSize, x + 1, y + 1, x, y)\n    expandMinesBoardUtil(minesboard, gridSize, x, y - 1, x, y)\n    expandMinesBoardUtil(minesboard, gridSize, x, y + 1, x, y)\n    expandMinesBoardUtil(minesboard, gridSize, x - 1, y, x, y)\n    expandMinesBoardUtil(minesboard, gridSize, x - 1, y - 1, x, y)\n    expandMinesBoardUtil(minesboard, gridSize, x - 1, y + 1, x, y)\n\n    return Array.from(minesboard)\n\n}\n\nconst expandMinesBoardUtil = (minesboard, gridSize, x, y, px, py) => {\n    if(x < 0 || x >= gridSize || y < 0 || y >= gridSize) {\n        return\n    }\n\n    if(minesboard[x][y].value === 0) {\n        return;\n    }\n\n    const adjacentMines = countAdjacentMines(minesboard, gridSize, x, y)\n    minesboard[x][y].value = adjacentMines\n    minesboard[x][y].shown = true\n\n    if(minesboard[x][y].value === 0) {\n        if(!(px === x + 1 && py === y - 1)) {\n            expandMinesBoardUtil(minesboard, gridSize, x + 1, y - 1, x, y)\n        }\n        \n        if(!(px === x + 1 && py === y)) {\n            expandMinesBoardUtil(minesboard, gridSize, x + 1, y, x, y)\n        }\n\n        if(!(px === x + 1 && py === y + 1)) {\n            expandMinesBoardUtil(minesboard, gridSize, x + 1, y + 1, x, y)\n        }\n\n        if(!(px === x - 1 && py === y - 1)) {\n            expandMinesBoardUtil(minesboard, gridSize, x - 1, y - 1, x, y)\n        }\n\n        if(!(px === x - 1 && py === y)) {\n            expandMinesBoardUtil(minesboard, gridSize, x - 1, y, x, y)\n        }\n\n        if(!(px === x - 1 && py === y - 1)) {\n            expandMinesBoardUtil(minesboard, gridSize, x - 1, y - 1, x, y)\n        }\n\n        if(!(px === x && py === y - 1)) {\n            expandMinesBoardUtil(minesboard, gridSize, x, y - 1, x, y)\n        }\n\n        if(!(px === x && py === y + 1)) {\n            expandMinesBoardUtil(minesboard, gridSize, x, y + 1, x, y)\n        }\n\n    }\n    return;\n}\n\nexport const clearField = (minesboard, size, x, y) => {\n    const adjacentMines = countAdjacentMines(minesboard, size, x, y)\n    let newBoard;\n\n    if(adjacentMines) {\n        newBoard = minesboard.map((row, rid) => {\n            if(rid !== x) {\n                return row;\n            }\n            return row.map((cell, cid) => {\n                if(cid !== y) {\n                    return cell\n                }\n                return {\n                    ...cell,\n                    shown: true,\n                    value: adjacentMines\n                }\n            })\n        })\n    } else {\n        newBoard = expandMinesBoard(minesboard, size, x, y)\n    }\n    return newBoard\n}\n\nexport const markField = (minesboard, size, x, y) => {\n    return minesboard.map((row, rid) => {\n        if(rid !== x) {\n            return row;\n        }\n        return row.map((cell, cid) => {\n            if(cid !== y) {\n                return cell\n            }\n            return {\n                ...cell,\n                isMarked: !cell.isMarked\n            }\n        })\n    })\n}","import { createContext, useReducer, useCallback } from 'react'\nimport { generateGrid, isMine, clearField, markField } from './utils';\n\n\nconst mines=60;\n\nconst context = createContext()\n\nconst initialState = {\n    minesboard: [],\n    size: 20,\n}\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case \"initialize\":\n            return {\n                ...initialState,\n                size: state.size,\n                minesboard: generateGrid(state.size, mines)\n            }\n        case \"incrementSize\":\n            return {\n                ...state,\n                size: state.size + 1,\n                minesboard: generateGrid(state.size + 1, mines)\n            }\n        case \"decrementSize\":\n            return {\n                ...state,\n                size: state.size - 1,\n                minesboard: generateGrid(state.size - 1, mines)\n            }\n\n        case \"updateBoard\":\n            return {\n                ...state,\n                minesboard: action.minesboard\n            }\n\n        case 'gameOver':\n            return {\n                ...state,\n                isGameOver: true\n            }\n\n        case 'started':\n            return {\n                ...state,\n                started: true\n            }\n\n        default:\n            return state\n    }\n}\n\n\n\n\nexport const ContextProvider = ({children}) => {\n\n\n    const [state, dispatch] = useReducer(reducer, initialState)\n    const { minesboard, size, started, isGameOver } = state\n    const actions = {\n        incrementSize: () => dispatch({type: 'incrementSize'}),\n\n        decrementSize: () => dispatch({type: 'decrementSize'}),\n\n        initializeMinesField: useCallback(() => dispatch({type: 'initialize'}), []),\n\n        clearField: (x, y) => {\n            if(minesboard[x][y].shown || isGameOver) {\n                return;\n            }\n            if(!started) {\n                dispatch({\n                    action: 'started'\n                })\n            }\n            if(isMine(minesboard, size, x, y)) {\n                dispatch({type: 'gameOver'})\n                alert('You have stepped on a mine')\n                return;\n            }\n\n            dispatch({\n                type: 'updateBoard',\n                minesboard: clearField(minesboard, size, x, y)\n            })\n        },\n\n        markField: (x, y) => {\n            if(minesboard[x][y].shown || isGameOver) {\n                return;\n            }\n            dispatch({\n                type: 'updateBoard',\n                minesboard: markField(minesboard, size, x, y)\n            })\n        }\n\n\n    }\n\n\n    return (\n        <context.Provider value={{\n            state,\n            actions\n        }}>\n            {children}\n        </context.Provider>\n    )\n}\nexport default context","import { makeStyles } from \"@material-ui/styles\"\nimport { useContext } from \"react\"\nimport context from \"../context\"\n\nconst getColor = ({cell, isGameOver}) => {\n    console.log(isGameOver)\n    if(cell.isMine && isGameOver) {\n        return '#ff9595'\n    }\n    if(cell.isMarked) {\n        return '#f7bba1'\n    }\n    if(cell.shown) {\n        return '#e7e6f7'\n    }\n    return '#dbdaf7'\n}\n\nconst useStyles = makeStyles({\n    cell: {\n        height: 25,\n        width: 25,\n        border: '1px solid gray',\n        backgroundColor: getColor\n    },\n})\n\nconst Cell = ({cell, clearField, markField}) => {\n    const { state } = useContext(context)\n    const { isGameOver } = state\n    const classes = useStyles({cell, isGameOver})\n\n\n    const mark = (e) => {\n        e.preventDefault()\n        markField()\n    }\n    const showValue = () => {\n        if(isGameOver) {\n            if(cell.isMine) {\n                return '*'\n            }\n        }\n        if(cell.isMarked) {\n            return '?'\n        }\n        if(cell.value === '*') {\n            return '.'\n        }\n        if(cell.value === 0) {\n            return ''\n        }\n        return cell.value\n    }\n\n    return (\n        <div className={classes.cell} onClick={clearField} onContextMenu={mark}>\n            {showValue()}\n        </div>\n    )\n}\n\nexport default Cell","import { makeStyles } from \"@material-ui/styles\";\nimport { useContext } from \"react\";\nimport context from \"../context\";\nimport Cell from \"./Cell\";\n\nconst useStyles = makeStyles({\n    minesboard: {\n        margin: '0 auto',\n        gridArea:'minesboard',\n        height: ({size}) => size * 25 + 2,\n        width: ({size}) => size * 25 + 2,\n        border: '1px solid black',\n        display: 'grid',\n        gridTemplateColumns: ({size}) => `repeat(${size}, auto)`\n    }\n})\n\nconst MinesBoard = () => {\n    const { state, actions } = useContext(context)\n    const { minesboard, size } = state\n    const { clearField, markField } = actions\n    const createCells = () => {\n        return minesboard.map((row, rid) => {\n            return row.map((cell, cid) => (\n                <Cell \n                    key={`cell-${rid}-${cid}`} \n                    cell={cell} \n                    clearField={() => clearField(rid, cid)} \n                    markField={() => markField(rid, cid)}/>\n            ))\n        })\n    }\n    const classes = useStyles({size})\n    return (\n        <div className={classes.minesboard}>\n            {createCells()}\n        </div>\n    )\n}\n\nexport default MinesBoard;","import { useContext, useEffect } from \"react\"\nimport { Button, ButtonGroup, makeStyles, Typography } from '@material-ui/core'\nimport context from \"../context\"\nimport MinesBoard from \"./MinesBoard\"\n\nconst useStyles = makeStyles({\n    minesweeper: {\n        display: 'grid',\n        width: 800,\n        margin: '0 auto',\n        gridTemplateColumns: \"repeat(3, auto)\",\n        gap: 20,\n        textAlign: 'center',\n        gridTemplateAreas:`\n        \". header .\"\n        \". options restart\"\n        \"total available time\"\n        \"minesboard minesboard minesboard\"\n        `\n\n    },\n\n    header: {\n        gridArea: 'header'\n    },\n\n    options: {\n        gridArea: 'options',\n    },\n\n    time: {\n        gridArea: 'time',\n        justifyItem: 'center'\n    },\n\n    restart: {\n        gridArea: 'restart'\n    },\n\n    total: {\n        gridArea: 'total'\n    },\n\n    available: {\n        gridArea: 'available'\n    }\n})\n\nconst Minesweeper = () => {\n    const {actions, state} = useContext(context)\n\n    const { incrementSize, decrementSize, initializeMinesField } = actions\n    useEffect(initializeMinesField, [initializeMinesField])\n    const classes = useStyles()\n    const { size } = state\n    return (\n        <div className={classes.minesweeper}>\n            <Typography className={classes.header} variant=\"h3\">Minesweeper</Typography>\n            <ButtonGroup \n                fullWidth\n                className={classes.options} \n                variant=\"contained\" \n                color=\"primary\" \n            >\n                <Button onClick={incrementSize}>+</Button>\n                <Button >{size} X {size}</Button>\n                <Button onClick={decrementSize}>-</Button>\n            </ButtonGroup>\n\n            <Button \n                fullWidth\n                className={classes.restart} \n                variant=\"outlined\" \n                color=\"primary\" \n                onClick={initializeMinesField}>Restart</Button>\n            <Typography className={classes.total}>Total Mines: </Typography>\n            <Typography className={classes.available}>Available Mines</Typography>\n            <Typography className={classes.time}></Typography>\n            <MinesBoard/>\n        </div>\n    )\n}\n\nexport default Minesweeper","import Minesweeper from './components/Minesweeper'\nimport { ContextProvider } from './context'\n\nfunction App() {\n  return (\n     <ContextProvider>\n       <Minesweeper />\n     </ContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}